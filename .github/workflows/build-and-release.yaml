name: Build and Release Apps

on:
  push:
    branches:
      - release

jobs:
  build:
    name: Build Apps
    runs-on: macos-latest
    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=release_$(date +'%Y-%m-%d_%H-%m-%S')" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11.0.10'
          distribution: 'adopt'
      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Setup Private Key
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release-keystore.jks.asc
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" --batch release-keystore.jks.asc > android/app/release-keystore.jks
      - name: Setup Services Key
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_KEYSTORE }}" > google-services.json.asc
          gpg -d --passphrase "${{ secrets.GOOGLE_SERVICES_PASSPHRASE }}" --batch google-services.json.asc > android/app/google-services.json
      - name: Install pub Dependencies
        run: flutter pub get
      - name: Generate launcher icons
        run: flutter pub run flutter_launcher_icons:main
      - name: Generate splashscreen
        run: flutter pub run flutter_native_splash:create
      - name: Run Tests
        run: flutter test
      #      - name: Build Android App
      #        run: flutter build apk --split-per-abi
      - name: Build Android App
        run: |
          flutter build apk --release --split-per-abi
      - name: Build Android App bundle
        run: |
          flutter build appbundle --release
      #      - name: Build iOS App
      #        run: |
      #          flutter build ios --no-codesign
      #          cd build/ios/iphoneos
      #          mkdir Payload
      #          cd Payload
      #          ln -s ../Runner.app
      #          cd ..
      #          zip -r app.ipa Payload
      - name: Release Apps
        uses: ncipollo/release-action@v1
        with:
          tag: v1.1.${{ github.run_number }}-alpha
          name: 'Release v1.1.${{ github.run_number }}'
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'build/app/outputs/flutter-apk/*.apk,build/ios/iphoneos/app.ipa,build/app/outputs/bundle/release/*'
