// Mocks generated by Mockito 5.0.16 from annotations
// in core/test/presentation/provider/user_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:core/data/models/register_model.dart' as _i12;
import 'package:core/data/models/user_response.dart' as _i11;
import 'package:core/data/models/user_token.dart' as _i9;
import 'package:core/domain/entities/session_data.dart' as _i15;
import 'package:core/domain/entities/user.dart' as _i7;
import 'package:core/domain/entities/user_question.dart' as _i20;
import 'package:core/domain/repositories/repository.dart' as _i2;
import 'package:core/domain/usecases/get_password_reset.dart' as _i13;
import 'package:core/domain/usecases/get_session_data.dart' as _i14;
import 'package:core/domain/usecases/get_session_status.dart' as _i23;
import 'package:core/domain/usecases/get_user.dart' as _i4;
import 'package:core/domain/usecases/post_change_password.dart' as _i18;
import 'package:core/domain/usecases/post_fcm_token.dart' as _i16;
import 'package:core/domain/usecases/post_login.dart' as _i8;
import 'package:core/domain/usecases/post_register.dart' as _i10;
import 'package:core/domain/usecases/post_user_challenge.dart' as _i19;
import 'package:core/domain/usecases/put_fcm_token.dart' as _i17;
import 'package:core/domain/usecases/remove_session_data.dart' as _i21;
import 'package:core/domain/usecases/save_session_data.dart' as _i22;
import 'package:core/utils/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRepository_0 extends _i1.Fake implements _i2.Repository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetUser extends _i1.Mock implements _i4.GetUser {
  MockGetUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.User>> execute(String? email) =>
      (super.noSuchMethod(Invocation.method(#execute, [email]),
              returnValue: Future<_i3.Either<_i6.Failure, _i7.User>>.value(
                  _FakeEither_1<_i6.Failure, _i7.User>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i7.User>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PostLogin].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostLogin extends _i1.Mock implements _i8.PostLogin {
  MockPostLogin() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i9.UserToken>> execute(
          String? username, String? password) =>
      (super.noSuchMethod(Invocation.method(#execute, [username, password]),
              returnValue: Future<_i3.Either<_i6.Failure, _i9.UserToken>>.value(
                  _FakeEither_1<_i6.Failure, _i9.UserToken>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i9.UserToken>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PostRegister].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRegister extends _i1.Mock implements _i10.PostRegister {
  MockPostRegister() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i11.UserResponse>> execute(
          _i12.RegisterModel? user) =>
      (super.noSuchMethod(Invocation.method(#execute, [user]),
          returnValue: Future<_i3.Either<_i6.Failure, _i11.UserResponse>>.value(
              _FakeEither_1<_i6.Failure, _i11.UserResponse>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i11.UserResponse>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetPasswordReset].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPasswordReset extends _i1.Mock implements _i13.GetPasswordReset {
  MockGetPasswordReset() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(String? email) =>
      (super.noSuchMethod(Invocation.method(#execute, [email]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetSessionData].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSessionData extends _i1.Mock implements _i14.GetSessionData {
  MockGetSessionData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i15.SessionData?>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i6.Failure, _i15.SessionData?>>.value(
              _FakeEither_1<_i6.Failure, _i15.SessionData?>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i15.SessionData?>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PostFCMToken].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostFCMToken extends _i1.Mock implements _i16.PostFCMToken {
  MockPostFCMToken() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          int? user, String? fcmToken) =>
      (super.noSuchMethod(Invocation.method(#execute, [user, fcmToken]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PutFCMToken].
///
/// See the documentation for Mockito's code generation for more information.
class MockPutFCMToken extends _i1.Mock implements _i17.PutFCMToken {
  MockPutFCMToken() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          int? user, String? fcmToken) =>
      (super.noSuchMethod(Invocation.method(#execute, [user, fcmToken]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PostChangePassword].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostChangePassword extends _i1.Mock
    implements _i18.PostChangePassword {
  MockPostChangePassword() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          String? oldPass, String? newPass, String? token) =>
      (super.noSuchMethod(
              Invocation.method(#execute, [oldPass, newPass, token]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PostUserChallenge].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostUserChallenge extends _i1.Mock implements _i19.PostUserChallenge {
  MockPostUserChallenge() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i20.UserQuestion? challenge) =>
      (super.noSuchMethod(Invocation.method(#execute, [challenge]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoveSessionData].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveSessionData extends _i1.Mock implements _i21.RemoveSessionData {
  MockRemoveSessionData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i15.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#execute, [data]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveSessionData].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveSessionData extends _i1.Mock implements _i22.SaveSessionData {
  MockSaveSessionData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i15.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#execute, [data]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetSessionStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSessionStatus extends _i1.Mock implements _i23.GetSessionStatus {
  MockGetSessionStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<bool> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  String toString() => super.toString();
}
