// Mocks generated by Mockito 5.0.16 from annotations
// in laporhoax/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i10;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i8;
import 'package:laporhoax/common/failure.dart' as _i11;
import 'package:laporhoax/data/datasources/db/database_helper.dart' as _i28;
import 'package:laporhoax/data/datasources/local_data_source.dart' as _i26;
import 'package:laporhoax/data/datasources/preferences/preferences_helper.dart'
    as _i30;
import 'package:laporhoax/data/datasources/remote_data_source.dart' as _i21;
import 'package:laporhoax/data/models/category_model.dart' as _i22;
import 'package:laporhoax/data/models/feed_model.dart' as _i24;
import 'package:laporhoax/data/models/feed_table.dart' as _i27;
import 'package:laporhoax/data/models/question_model.dart' as _i25;
import 'package:laporhoax/data/models/register_model.dart' as _i19;
import 'package:laporhoax/data/models/report_model.dart' as _i5;
import 'package:laporhoax/data/models/report_request.dart' as _i20;
import 'package:laporhoax/data/models/user_model.dart' as _i23;
import 'package:laporhoax/data/models/user_question_model.dart' as _i6;
import 'package:laporhoax/data/models/user_response.dart' as _i4;
import 'package:laporhoax/data/models/user_token.dart' as _i3;
import 'package:laporhoax/domain/entities/category.dart' as _i13;
import 'package:laporhoax/domain/entities/feed.dart' as _i14;
import 'package:laporhoax/domain/entities/question.dart' as _i15;
import 'package:laporhoax/domain/entities/report.dart' as _i12;
import 'package:laporhoax/domain/entities/session_data.dart' as _i16;
import 'package:laporhoax/domain/entities/user.dart' as _i17;
import 'package:laporhoax/domain/entities/user_question.dart' as _i18;
import 'package:laporhoax/domain/repositories/repository.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i7;
import 'package:sqflite/sqflite.dart' as _i29;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeUserToken_1 extends _i1.Fake implements _i3.UserToken {}

class _FakeUserResponse_2 extends _i1.Fake implements _i4.UserResponse {}

class _FakeReportModel_3 extends _i1.Fake implements _i5.ReportModel {}

class _FakeUserQuestionModel_4 extends _i1.Fake
    implements _i6.UserQuestionModel {}

class _FakeSharedPreferences_5 extends _i1.Fake
    implements _i7.SharedPreferences {}

class _FakeBaseOptions_6 extends _i1.Fake implements _i8.BaseOptions {}

class _FakeHttpClientAdapter_7 extends _i1.Fake
    implements _i8.HttpClientAdapter {}

class _FakeTransformer_8 extends _i1.Fake implements _i8.Transformer {}

class _FakeInterceptors_9 extends _i1.Fake implements _i8.Interceptors {}

class _FakeResponse_10<T> extends _i1.Fake implements _i8.Response<T> {}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i9.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> deleteReport(
          String? token, _i12.Report? report) =>
      (super.noSuchMethod(Invocation.method(#deleteReport, [token, report]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i13.Category>>> getCategories() =>
      (super.noSuchMethod(Invocation.method(#getCategories, []),
              returnValue:
                  Future<_i2.Either<_i11.Failure, List<_i13.Category>>>.value(
                      _FakeEither_0<_i11.Failure, List<_i13.Category>>()))
          as _i10.Future<_i2.Either<_i11.Failure, List<_i13.Category>>>);

  @override
  _i10.Future<bool> isAddedToSavedFeed(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToSavedFeed, [id]),
          returnValue: Future<bool>.value(false)) as _i10.Future<bool>);

  @override
  _i10.Future<bool> isSessionActivated() =>
      (super.noSuchMethod(Invocation.method(#isSessionActivated, []),
          returnValue: Future<bool>.value(false)) as _i10.Future<bool>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i14.Feed>>> getFeeds() =>
      (super.noSuchMethod(Invocation.method(#getFeeds, []),
          returnValue: Future<_i2.Either<_i11.Failure, List<_i14.Feed>>>.value(
              _FakeEither_0<_i11.Failure, List<_i14.Feed>>())) as _i10
          .Future<_i2.Either<_i11.Failure, List<_i14.Feed>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> getPasswordReset(
          String? email, String? token) =>
      (super.noSuchMethod(Invocation.method(#getPasswordReset, [email, token]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i15.Question>>> getQuestions() =>
      (super.noSuchMethod(Invocation.method(#getQuestions, []),
              returnValue:
                  Future<_i2.Either<_i11.Failure, List<_i15.Question>>>.value(
                      _FakeEither_0<_i11.Failure, List<_i15.Question>>()))
          as _i10.Future<_i2.Either<_i11.Failure, List<_i15.Question>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.Report>>> getReports(
          String? token, String? id) =>
      (super.noSuchMethod(Invocation.method(#getReports, [token, id]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, List<_i12.Report>>>.value(
                      _FakeEither_0<_i11.Failure, List<_i12.Report>>()))
          as _i10.Future<_i2.Either<_i11.Failure, List<_i12.Report>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i14.Feed>>> getSavedFeeds() =>
      (super.noSuchMethod(Invocation.method(#getSavedFeeds, []),
          returnValue: Future<_i2.Either<_i11.Failure, List<_i14.Feed>>>.value(
              _FakeEither_0<_i11.Failure, List<_i14.Feed>>())) as _i10
          .Future<_i2.Either<_i11.Failure, List<_i14.Feed>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i16.SessionData?>> getSessionData() =>
      (super.noSuchMethod(Invocation.method(#getSessionData, []),
              returnValue:
                  Future<_i2.Either<_i11.Failure, _i16.SessionData?>>.value(
                      _FakeEither_0<_i11.Failure, _i16.SessionData?>()))
          as _i10.Future<_i2.Either<_i11.Failure, _i16.SessionData?>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i17.User>> getUser(String? email) =>
      (super.noSuchMethod(Invocation.method(#getUser, [email]),
              returnValue: Future<_i2.Either<_i11.Failure, _i17.User>>.value(
                  _FakeEither_0<_i11.Failure, _i17.User>()))
          as _i10.Future<_i2.Either<_i11.Failure, _i17.User>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i18.UserQuestion>> getUserChallenge(
          String? id) =>
      (super.noSuchMethod(Invocation.method(#getUserChallenge, [id]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, _i18.UserQuestion>>.value(
                      _FakeEither_0<_i11.Failure, _i18.UserQuestion>()))
          as _i10.Future<_i2.Either<_i11.Failure, _i18.UserQuestion>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> postChangePassword(
          String? oldPass, String? newPass, String? token) =>
      (super.noSuchMethod(
              Invocation.method(#postChangePassword, [oldPass, newPass, token]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> postFCMToken(
          String? user, String? fcmToken) =>
      (super.noSuchMethod(Invocation.method(#postFCMToken, [user, fcmToken]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i3.UserToken>> postLogin(
          String? username, String? password) =>
      (super.noSuchMethod(Invocation.method(#postLogin, [username, password]),
          returnValue: Future<_i2.Either<_i11.Failure, _i3.UserToken>>.value(
              _FakeEither_0<_i11.Failure, _i3.UserToken>())) as _i10
          .Future<_i2.Either<_i11.Failure, _i3.UserToken>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i4.UserResponse>> postRegister(
          _i19.RegisterModel? user) =>
      (super.noSuchMethod(Invocation.method(#postRegister, [user]),
          returnValue: Future<_i2.Either<_i11.Failure, _i4.UserResponse>>.value(
              _FakeEither_0<_i11.Failure, _i4.UserResponse>())) as _i10
          .Future<_i2.Either<_i11.Failure, _i4.UserResponse>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i12.Report>> postReport(
          String? token, _i20.ReportRequest? report) =>
      (super.noSuchMethod(Invocation.method(#postReport, [token, report]),
              returnValue: Future<_i2.Either<_i11.Failure, _i12.Report>>.value(
                  _FakeEither_0<_i11.Failure, _i12.Report>()))
          as _i10.Future<_i2.Either<_i11.Failure, _i12.Report>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> postUserChallenge(
          _i18.UserQuestion? challenge) =>
      (super.noSuchMethod(Invocation.method(#postUserChallenge, [challenge]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> removeFeed(_i14.Feed? feed) =>
      (super.noSuchMethod(Invocation.method(#removeFeed, [feed]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> removeSessionData(
          _i16.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#removeSessionData, [data]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> saveFeed(_i14.Feed? feed) =>
      (super.noSuchMethod(Invocation.method(#saveFeed, [feed]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> saveSessionData(
          _i16.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#saveSessionData, [data]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> updateSessionData(
          _i16.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#updateSessionData, [data]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i21.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i3.UserToken> postLogin(String? username, String? password) =>
      (super.noSuchMethod(Invocation.method(#postLogin, [username, password]),
              returnValue: Future<_i3.UserToken>.value(_FakeUserToken_1()))
          as _i10.Future<_i3.UserToken>);

  @override
  _i10.Future<_i4.UserResponse> postRegister(_i19.RegisterModel? user) =>
      (super.noSuchMethod(Invocation.method(#postRegister, [user]),
              returnValue:
                  Future<_i4.UserResponse>.value(_FakeUserResponse_2()))
          as _i10.Future<_i4.UserResponse>);

  @override
  _i10.Future<List<_i22.CategoryModel>> getCategory() => (super.noSuchMethod(
          Invocation.method(#getCategory, []),
          returnValue:
              Future<List<_i22.CategoryModel>>.value(<_i22.CategoryModel>[]))
      as _i10.Future<List<_i22.CategoryModel>>);

  @override
  _i10.Future<List<_i23.UserModel>> getUserData(String? email) =>
      (super.noSuchMethod(Invocation.method(#getUserData, [email]),
              returnValue:
                  Future<List<_i23.UserModel>>.value(<_i23.UserModel>[]))
          as _i10.Future<List<_i23.UserModel>>);

  @override
  _i10.Future<List<_i5.ReportModel>> getReport(String? token, String? id) =>
      (super.noSuchMethod(Invocation.method(#getReport, [token, id]),
              returnValue:
                  Future<List<_i5.ReportModel>>.value(<_i5.ReportModel>[]))
          as _i10.Future<List<_i5.ReportModel>>);

  @override
  _i10.Future<_i5.ReportModel> postReport(
          String? token, _i20.ReportRequest? report) =>
      (super.noSuchMethod(Invocation.method(#postReport, [token, report]),
              returnValue: Future<_i5.ReportModel>.value(_FakeReportModel_3()))
          as _i10.Future<_i5.ReportModel>);

  @override
  _i10.Future<String> deleteReport(String? token, _i12.Report? report) =>
      (super.noSuchMethod(Invocation.method(#deleteReport, [token, report]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<List<_i24.FeedModel>> getFeeds() => (super.noSuchMethod(
          Invocation.method(#getFeeds, []),
          returnValue: Future<List<_i24.FeedModel>>.value(<_i24.FeedModel>[]))
      as _i10.Future<List<_i24.FeedModel>>);

  @override
  _i10.Future<List<_i25.QuestionModel>> getQuestions() => (super.noSuchMethod(
          Invocation.method(#getQuestions, []),
          returnValue:
              Future<List<_i25.QuestionModel>>.value(<_i25.QuestionModel>[]))
      as _i10.Future<List<_i25.QuestionModel>>);

  @override
  _i10.Future<_i6.UserQuestionModel> getUserQuestions(String? id) =>
      (super.noSuchMethod(Invocation.method(#getUserQuestions, [id]),
              returnValue: Future<_i6.UserQuestionModel>.value(
                  _FakeUserQuestionModel_4()))
          as _i10.Future<_i6.UserQuestionModel>);

  @override
  _i10.Future<dynamic> postChallenge(_i18.UserQuestion? challenge) =>
      (super.noSuchMethod(Invocation.method(#postChallenge, [challenge]),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);

  @override
  _i10.Future<dynamic> postFcmToken(String? user, String? fcmToken) =>
      (super.noSuchMethod(Invocation.method(#postFcmToken, [user, fcmToken]),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);

  @override
  _i10.Future<String> postChangePassword(
          String? oldPass, String? newPass, String? token) =>
      (super.noSuchMethod(
          Invocation.method(#postChangePassword, [oldPass, newPass, token]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<String> getPasswordReset(String? email, String? token) =>
      (super.noSuchMethod(Invocation.method(#getPasswordReset, [email, token]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i26.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<String> insertFeed(_i27.FeedTable? feed) =>
      (super.noSuchMethod(Invocation.method(#insertFeed, [feed]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<String> removeFeed(_i27.FeedTable? feed) =>
      (super.noSuchMethod(Invocation.method(#removeFeed, [feed]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<_i27.FeedTable?> getFeedById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getFeedById, [id]),
              returnValue: Future<_i27.FeedTable?>.value())
          as _i10.Future<_i27.FeedTable?>);

  @override
  _i10.Future<List<_i27.FeedTable>> getFeeds() => (super.noSuchMethod(
          Invocation.method(#getFeeds, []),
          returnValue: Future<List<_i27.FeedTable>>.value(<_i27.FeedTable>[]))
      as _i10.Future<List<_i27.FeedTable>>);

  @override
  _i10.Future<bool> isLoggedIn() =>
      (super.noSuchMethod(Invocation.method(#isLoggedIn, []),
          returnValue: Future<bool>.value(false)) as _i10.Future<bool>);

  @override
  _i10.Future<_i16.SessionData?> getSession() =>
      (super.noSuchMethod(Invocation.method(#getSession, []),
              returnValue: Future<_i16.SessionData?>.value())
          as _i10.Future<_i16.SessionData?>);

  @override
  _i10.Future<String> insertSession(_i16.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#insertSession, [data]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<String> removeSession(_i16.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#removeSession, [data]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i28.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i29.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i29.Database?>.value())
          as _i10.Future<_i29.Database?>);

  @override
  _i10.Future<void> insertNews(_i27.FeedTable? feed) => (super.noSuchMethod(
      Invocation.method(#insertNews, [feed]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);

  @override
  _i10.Future<List<Map<String, dynamic>>> getFeeds() =>
      (super.noSuchMethod(Invocation.method(#getFeeds, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i10.Future<List<Map<String, dynamic>>>);

  @override
  _i10.Future<Map<String, dynamic>?> getFeedById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getFeedById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i10.Future<Map<String, dynamic>?>);

  @override
  _i10.Future<void> removeFeed(_i27.FeedTable? feed) => (super.noSuchMethod(
      Invocation.method(#removeFeed, [feed]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);

  @override
  _i10.Future<void> insertSession(_i16.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#insertSession, [data]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);

  @override
  _i10.Future<Map<String, dynamic>?> getLastSessions() =>
      (super.noSuchMethod(Invocation.method(#getLastSessions, []),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i10.Future<Map<String, dynamic>?>);

  @override
  _i10.Future<void> updateSession(_i16.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#updateSession, [data]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);

  @override
  _i10.Future<void> removeSession(_i16.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#removeSession, [data]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [PreferencesHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferencesHelper extends _i1.Mock implements _i30.PreferencesHelper {
  MockPreferencesHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i7.SharedPreferences> get sharedPreferences =>
      (super.noSuchMethod(Invocation.getter(#sharedPreferences),
              returnValue: Future<_i7.SharedPreferences>.value(
                  _FakeSharedPreferences_5()))
          as _i10.Future<_i7.SharedPreferences>);

  @override
  set sharedPreferences(
          _i10.Future<_i7.SharedPreferences>? _sharedPreferences) =>
      super.noSuchMethod(
          Invocation.setter(#sharedPreferences, _sharedPreferences),
          returnValueForMissingStub: null);

  @override
  _i10.Future<List<String>> get sessionData =>
      (super.noSuchMethod(Invocation.getter(#sessionData),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i10.Future<List<String>>);

  @override
  _i10.Future<List<String>> get userData =>
      (super.noSuchMethod(Invocation.getter(#userData),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i10.Future<List<String>>);

  @override
  _i10.Future<bool> get isLogin =>
      (super.noSuchMethod(Invocation.getter(#isLogin),
          returnValue: Future<bool>.value(false)) as _i10.Future<bool>);

  @override
  _i10.Future<String> setSessionData(_i3.UserToken? value) =>
      (super.noSuchMethod(Invocation.method(#setSessionData, [value]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  _i10.Future<String> setUserData(_i17.User? data) =>
      (super.noSuchMethod(Invocation.method(#setUserData, [data]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);

  @override
  void setLogin(bool? value) =>
      super.noSuchMethod(Invocation.method(#setLogin, [value]),
          returnValueForMissingStub: null);

  @override
  String toString() => super.toString();
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i8.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.BaseOptions get options =>
      (super.noSuchMethod(Invocation.getter(#options),
          returnValue: _FakeBaseOptions_6()) as _i8.BaseOptions);

  @override
  set options(_i8.BaseOptions? _options) =>
      super.noSuchMethod(Invocation.setter(#options, _options),
          returnValueForMissingStub: null);

  @override
  _i8.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(Invocation.getter(#httpClientAdapter),
          returnValue: _FakeHttpClientAdapter_7()) as _i8.HttpClientAdapter);

  @override
  set httpClientAdapter(_i8.HttpClientAdapter? _httpClientAdapter) => super
      .noSuchMethod(Invocation.setter(#httpClientAdapter, _httpClientAdapter),
          returnValueForMissingStub: null);

  @override
  _i8.Transformer get transformer =>
      (super.noSuchMethod(Invocation.getter(#transformer),
          returnValue: _FakeTransformer_8()) as _i8.Transformer);

  @override
  set transformer(_i8.Transformer? _transformer) =>
      super.noSuchMethod(Invocation.setter(#transformer, _transformer),
          returnValueForMissingStub: null);

  @override
  _i8.Interceptors get interceptors =>
      (super.noSuchMethod(Invocation.getter(#interceptors),
          returnValue: _FakeInterceptors_9()) as _i8.Interceptors);

  @override
  void close({bool? force = false}) =>
      super.noSuchMethod(Invocation.method(#close, [], {#force: force}),
          returnValueForMissingStub: null);

  @override
  _i10.Future<_i8.Response<T>> get<T>(String? path,
          {Map<String, dynamic>? queryParameters,
          _i8.Options? options,
          _i8.CancelToken? cancelToken,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                path
              ], {
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> getUri<T>(Uri? uri,
          {_i8.Options? options,
          _i8.CancelToken? cancelToken,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#getUri, [
                uri
              ], {
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> post<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          _i8.Options? options,
          _i8.CancelToken? cancelToken,
          _i8.ProgressCallback? onSendProgress,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [
                path
              ], {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> postUri<T>(Uri? uri,
          {dynamic data,
          _i8.Options? options,
          _i8.CancelToken? cancelToken,
          _i8.ProgressCallback? onSendProgress,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#postUri, [
                uri
              ], {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> put<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          _i8.Options? options,
          _i8.CancelToken? cancelToken,
          _i8.ProgressCallback? onSendProgress,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [
                path
              ], {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> putUri<T>(Uri? uri,
          {dynamic data,
          _i8.Options? options,
          _i8.CancelToken? cancelToken,
          _i8.ProgressCallback? onSendProgress,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#putUri, [
                uri
              ], {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> head<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          _i8.Options? options,
          _i8.CancelToken? cancelToken}) =>
      (super.noSuchMethod(
              Invocation.method(#head, [
                path
              ], {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> headUri<T>(Uri? uri,
          {dynamic data, _i8.Options? options, _i8.CancelToken? cancelToken}) =>
      (super.noSuchMethod(
              Invocation.method(#headUri, [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken}),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> delete<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          _i8.Options? options,
          _i8.CancelToken? cancelToken}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [
                path
              ], {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> deleteUri<T>(Uri? uri,
          {dynamic data, _i8.Options? options, _i8.CancelToken? cancelToken}) =>
      (super.noSuchMethod(
              Invocation.method(#deleteUri, [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken}),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> patch<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          _i8.Options? options,
          _i8.CancelToken? cancelToken,
          _i8.ProgressCallback? onSendProgress,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [
                path
              ], {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> patchUri<T>(Uri? uri,
          {dynamic data,
          _i8.Options? options,
          _i8.CancelToken? cancelToken,
          _i8.ProgressCallback? onSendProgress,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#patchUri, [
                uri
              ], {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  void lock() => super.noSuchMethod(Invocation.method(#lock, []),
      returnValueForMissingStub: null);

  @override
  void unlock() => super.noSuchMethod(Invocation.method(#unlock, []),
      returnValueForMissingStub: null);

  @override
  void clear() => super.noSuchMethod(Invocation.method(#clear, []),
      returnValueForMissingStub: null);

  @override
  _i10.Future<_i8.Response<dynamic>> download(String? urlPath, dynamic savePath,
          {_i8.ProgressCallback? onReceiveProgress,
          Map<String, dynamic>? queryParameters,
          _i8.CancelToken? cancelToken,
          bool? deleteOnError = true,
          String? lengthHeader = r'content-length',
          dynamic data,
          _i8.Options? options}) =>
      (super.noSuchMethod(
              Invocation.method(#download, [
                urlPath,
                savePath
              ], {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options
              }),
              returnValue: Future<_i8.Response<dynamic>>.value(
                  _FakeResponse_10<dynamic>()))
          as _i10.Future<_i8.Response<dynamic>>);

  @override
  _i10.Future<_i8.Response<dynamic>> downloadUri(Uri? uri, dynamic savePath,
          {_i8.ProgressCallback? onReceiveProgress,
          _i8.CancelToken? cancelToken,
          bool? deleteOnError = true,
          String? lengthHeader = r'content-length',
          dynamic data,
          _i8.Options? options}) =>
      (super.noSuchMethod(
              Invocation.method(#downloadUri, [
                uri,
                savePath
              ], {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options
              }),
              returnValue: Future<_i8.Response<dynamic>>.value(
                  _FakeResponse_10<dynamic>()))
          as _i10.Future<_i8.Response<dynamic>>);

  @override
  _i10.Future<_i8.Response<T>> request<T>(String? path,
          {dynamic data,
          Map<String, dynamic>? queryParameters,
          _i8.CancelToken? cancelToken,
          _i8.Options? options,
          _i8.ProgressCallback? onSendProgress,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#request, [
                path
              ], {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> requestUri<T>(Uri? uri,
          {dynamic data,
          _i8.CancelToken? cancelToken,
          _i8.Options? options,
          _i8.ProgressCallback? onSendProgress,
          _i8.ProgressCallback? onReceiveProgress}) =>
      (super.noSuchMethod(
              Invocation.method(#requestUri, [
                uri
              ], {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress
              }),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  _i10.Future<_i8.Response<T>> fetch<T>(_i8.RequestOptions? requestOptions) =>
      (super.noSuchMethod(Invocation.method(#fetch, [requestOptions]),
              returnValue: Future<_i8.Response<T>>.value(_FakeResponse_10<T>()))
          as _i10.Future<_i8.Response<T>>);

  @override
  String toString() => super.toString();
}
