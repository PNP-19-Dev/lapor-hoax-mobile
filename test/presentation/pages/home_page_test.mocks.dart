/*
 * Created by andii on 15/11/21 12.51
 * Copyright (c) 2021 . All rights reserved.
 * Last modified 15/11/21 12.25
 */

// Mocks generated by Mockito 5.0.16 from annotations
// in laporhoax/test/presentation/pages/home_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:laporhoax/domain/entities/feed.dart' as _i7;
import 'package:laporhoax/domain/entities/session_data.dart' as _i14;
import 'package:laporhoax/domain/entities/user.dart' as _i11;
import 'package:laporhoax/domain/entities/user_token.dart' as _i9;
import 'package:laporhoax/domain/repositories/repository.dart' as _i2;
import 'package:laporhoax/domain/usecases/get_feeds.dart' as _i4;
import 'package:laporhoax/domain/usecases/get_session_data.dart' as _i13;
import 'package:laporhoax/domain/usecases/get_user.dart' as _i10;
import 'package:laporhoax/domain/usecases/post_login.dart' as _i8;
import 'package:laporhoax/domain/usecases/remove_session_data.dart' as _i15;
import 'package:laporhoax/domain/usecases/save_session_data.dart' as _i12;
import 'package:laporhoax/utils/failure.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRepository_0 extends _i1.Fake implements _i2.Repository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetFeeds].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFeeds extends _i1.Mock implements _i4.GetFeeds {
  MockGetFeeds() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.Feed>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i7.Feed>>>.value(
              _FakeEither_1<_i6.Failure, List<_i7.Feed>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.Feed>>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PostLogin].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostLogin extends _i1.Mock implements _i8.PostLogin {
  MockPostLogin() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i9.UserToken>> execute(
          String? username, String? password) =>
      (super.noSuchMethod(Invocation.method(#execute, [username, password]),
              returnValue: Future<_i3.Either<_i6.Failure, _i9.UserToken>>.value(
                  _FakeEither_1<_i6.Failure, _i9.UserToken>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i9.UserToken>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetUser extends _i1.Mock implements _i10.GetUser {
  MockGetUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i11.User>> execute(String? email) =>
      (super.noSuchMethod(Invocation.method(#execute, [email]),
              returnValue: Future<_i3.Either<_i6.Failure, _i11.User>>.value(
                  _FakeEither_1<_i6.Failure, _i11.User>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i11.User>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveSessionData].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveSessionData extends _i1.Mock implements _i12.SaveSessionData {
  MockSaveSessionData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<String> execute(
          {int? id,
          String? expiry,
          String? token,
          String? email,
          String? username}) =>
      (super.noSuchMethod(
          Invocation.method(#execute, [], {
            #id: id,
            #expiry: expiry,
            #token: token,
            #email: email,
            #username: username
          }),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetSessionData].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSessionData extends _i1.Mock implements _i13.GetSessionData {
  MockGetSessionData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i14.SessionData?>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i6.Failure, _i14.SessionData?>>.value(
              _FakeEither_1<_i6.Failure, _i14.SessionData?>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i14.SessionData?>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoveSessionData].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveSessionData extends _i1.Mock implements _i15.RemoveSessionData {
  MockRemoveSessionData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);
  @override
  _i5.Future<String> execute(_i14.SessionData? data) =>
      (super.noSuchMethod(Invocation.method(#execute, [data]),
          returnValue: Future<String>.value('')) as _i5.Future<String>);
  @override
  String toString() => super.toString();
}
