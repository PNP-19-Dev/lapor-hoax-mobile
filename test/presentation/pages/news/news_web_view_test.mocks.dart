// Mocks generated by Mockito 5.0.16 from annotations
// in laporhoax/test/presentation/pages/news/news_web_view_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:laporhoax/common/failure.dart' as _i6;
import 'package:laporhoax/domain/entities/feed.dart' as _i7;
import 'package:laporhoax/domain/repositories/repository.dart' as _i2;
import 'package:laporhoax/domain/usecases/get_feed_detail.dart' as _i4;
import 'package:laporhoax/domain/usecases/get_feed_save_status.dart' as _i10;
import 'package:laporhoax/domain/usecases/remove_feed.dart' as _i9;
import 'package:laporhoax/domain/usecases/save_feed.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRepository_0 extends _i1.Fake implements _i2.Repository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetFeedDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFeedDetail extends _i1.Mock implements _i4.GetFeedDetail {
  MockGetFeedDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Feed>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.Feed>>.value(
              _FakeEither_1<_i6.Failure, _i7.Feed>()))
      as _i5.Future<_i3.Either<_i6.Failure, _i7.Feed>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveFeed].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveFeed extends _i1.Mock implements _i8.SaveFeed {
  MockSaveFeed() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.Feed? feed) =>
      (super.noSuchMethod(Invocation.method(#execute, [feed]),
          returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
              _FakeEither_1<_i6.Failure, String>()))
      as _i5.Future<_i3.Either<_i6.Failure, String>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoveFeed].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveFeed extends _i1.Mock implements _i9.RemoveFeed {
  MockRemoveFeed() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.Feed? feed) =>
      (super.noSuchMethod(Invocation.method(#execute, [feed]),
          returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
              _FakeEither_1<_i6.Failure, String>()))
      as _i5.Future<_i3.Either<_i6.Failure, String>>);

  @override
  String toString() => super.toString();
}

/// A class which mocks [GetFeedSaveStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFeedSaveStatus extends _i1.Mock implements _i10.GetFeedSaveStatus {
  MockGetFeedSaveStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeRepository_0()) as _i2.Repository);

  @override
  _i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);

  @override
  String toString() => super.toString();
}
